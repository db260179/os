ARG PLATFORM
ENV PLATFORM $PLATFORM

ARG VERSIONS
ENV VERSIONS $VERSIONS

ARG OLED
ENV OLED $OLED

ARG FAN
ENV FAN $FAN

RUN echo $PLATFORM $VERSIONS

RUN pacman --noconfirm --ask=4 -Syu \
	&& case "$ARCH" in \
		arm) \
			case "$BOARD" in \
				rpi2|rpi3|rpi4|zero2w) yes | pacman --needed -S pikvm-os-raspberrypi;; \
			esac;; \
		aarch64) true;; \
		*) echo "Unknown architecture: $ARCH"; exit 1;; \
	esac \
	&& (mv /boot/config.txt.pacsave /boot/config.txt || true) \
	&& (mv /boot/cmdline.txt.pacsave /boot/cmdline.txt || true) \
	&& rm -rf /var/cache/pacman/pkg/* /boot/*.pacnew

RUN pkg-install --assume-installed tessdata \
	kvmd-platform-$PLATFORM-$BOARD \
	kvmd-webterm \
	kvmd-oled \
	kvmd-fan \
	tesseract \
	tesseract-data-eng \
	wiringpi \
	pastebinit \
	tmate \
	netctl \
	monit \
	parted \
	e2fsprogs \
	dos2unix

ENV PART_OPTS nodev,nosuid,noexec,ro,errors=remount-ro
RUN echo "LABEL=PIPST /var/lib/kvmd/pst  ext4  $PART_OPTS,X-kvmd.pst-user=kvmd-pst  0 2" >> /etc/fstab
RUN systemctl enable kvmd-bootconfig \
	&& systemctl enable kvmd \
	&& systemctl enable kvmd-pst \
	&& systemctl enable kvmd-nginx \
	&& systemctl enable kvmd-webterm \
	&& if [[ $PLATFORM =~ ^.*-hdmi$ ]]; then systemctl enable kvmd-tc358743; fi \
	&& if [[ $PLATFORM =~ ^v0.*$ ]]; then systemctl mask serial-getty@ttyAMA0.service; fi \
	&& if [[ $PLATFORM =~ ^v[234].*$ ]]; then \
		systemctl enable kvmd-otg \
		&& echo "LABEL=PIMSD /var/lib/kvmd/msd  ext4  $PART_OPTS,X-kvmd.otgmsd-user=kvmd  0 2" >> /etc/fstab \
		\
	; fi \
	&& if [[ $BOARD =~ ^rpi4|zero2w$ && $PLATFORM =~ ^v[234].*-hdmi$ ]]; then systemctl enable kvmd-janus; fi \
	&& if [[ $BOARD =~ ^rpi3$ && $PLATFORM =~ ^v[1].*-hdmi$ ]]; then systemctl enable kvmd-janus; fi \
	&& if [[ $PLATFORM =~ ^v[34].*$ ]]; then systemctl enable kvmd-watchdog; fi \
	&& if [[ -n "$OLED" || $PLATFORM =~ ^v4.*$ ]]; then systemctl enable kvmd-oled kvmd-oled-reboot kvmd-oled-shutdown; fi \
	&& if [[ -n "$FAN" || $PLATFORM == v4plus-hdmi ]]; then systemctl enable kvmd-fan; fi

COPY stages/pikvm/nanorc /etc/skel/.nanorc
RUN cp -a /etc/skel/.nanorc /root \
	&& cp -a /etc/skel/.nanorc /home/kvmd-webterm \
	&& chown kvmd-webterm:kvmd-webterm /home/kvmd-webterm/.nanorc

COPY stages/pikvm/motd /etc/
COPY stages/pikvm/issue /etc/
COPY stages/pikvm/monitrc /etc/
COPY stages/pikvm/70-wifi-power.rules /etc/udev/rules.d/

ARG MONITMAILSERVER
ARG MONITMAILPORT
ARG MONITEMAILFROM
ARG MONITEMAIL

RUN sed -s -i -e "s:MONITMAILSERVER:$MONITMAILSERVER:" -e "s:MONITMAILPORT:$MONITMAILPORT:" \
	-e "s:MONITEMAILFROM:$MONITEMAILFROM:" -e "s:MONITEMAIL:$MONITEMAIL:" /etc/monitrc \
	&& systemctl enable monit && chmod 700 /etc/monitrc

RUN sed -i -f /usr/share/kvmd/configs.default/os/cmdline/$PLATFORM-$BOARD.sed /boot/cmdline.txt \
	&& cp /usr/share/kvmd/configs.default/os/boot-config/$PLATFORM-$BOARD.txt /boot/config.txt

RUN sed -i -e '/\<pam_systemd\.so\>/ s/^#*/#/' /etc/pam.d/system-login \
	&& sed -i -e '/\<pam_systemd_home\.so\>/ s/^#*/#/' /etc/pam.d/system-auth

ARG WIFI_HIDE_ESSID
ARG WIFI_ESSID
ARG WIFI_PASSWD
ARG WIFI_IFACE
RUN [ -z "$WIFI_ESSID" ] || ( \
		export config="/etc/netctl/$WIFI_IFACE-${WIFI_ESSID/ /_}" \
		&& echo "Description='Generated by Pi-KVM OS build system'" > $config \
		&& echo "Interface='$WIFI_IFACE'" >> $config \
		&& echo "Connection=wireless" >> $config \
		&& echo "Security=wpa" >> $config \
		&& echo "ESSID='$WIFI_ESSID'" >> $config \
		&& echo "IP=dhcp" >> $config \
		&& echo "Key='$WIFI_PASSWD'" >> $config \
		&& echo "Hidden='$WIFI_HIDE_ESSID'" >> $config \
		&& systemctl enable netctl-auto@$WIFI_IFACE.service \
	)

ARG ROOT_PASSWD
ENV ROOT_PASSWD $ROOT_PASSWD
RUN echo "root:$ROOT_PASSWD" | chpasswd \
	&& echo "PermitRootLogin yes" >> /etc/ssh/sshd_config \
	&& userdel -r -f alarm

ARG ROOT_SSH_AUTH_KEYS
RUN mkdir /root/.ssh && echo "${ROOT_SSH_AUTH_KEYS}" >> /root/.ssh/authorized_keys \
    && chmod 600 /root/.ssh/* && sed -i s/\'//g /root/.ssh/authorized_keys

ARG WEBUI_ADMIN_PASSWD
ENV WEBUI_ADMIN_PASSWD $WEBUI_ADMIN_PASSWD
RUN echo "$WEBUI_ADMIN_PASSWD" | kvmd-htpasswd set --read-stdin admin

ARG IPMI_ADMIN_PASSWD
ENV IPMI_ADMIN_PASSWD $IPMI_ADMIN_PASSWD
RUN sed -i "\$d" /etc/kvmd/ipmipasswd \
	&& echo "admin:$IPMI_ADMIN_PASSWD -> admin:$WEBUI_ADMIN_PASSWD" >> /etc/kvmd/ipmipasswd

ARG NEW_HTTPS_CERT
ENV NEW_HTTPS_CERT $NEW_HTTPS_CERT
RUN echo $NEW_HTTPS_CERT \
	&& kvmd-gencert --do-the-thing

ARG SSLHOST
ENV SSLHOST $SSLHOST
